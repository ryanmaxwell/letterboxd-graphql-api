# Top-Level Queries

type Query {
  films(
    genre: ID
    decade: Int
    year: Int
    service: ID
    member: ID
    memberRelationship: FilmMemberRelationship
    includeFriends: IncludeFriends
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    where: [FilmsWhere!]
    sort: FilmsSort
    perPage: Int
    cursor: ID
    ): [Film!]!
  
  film(id: ID!): Film

  filmStatistics(film: ID!): FilmStatistics
  
  relationshipToFilm(accessToken: String!, film: ID!): FilmRelationship
  
  filmCollection(
    id: ID!
    genre: ID
    decade: Int
    year: Int
    service: ID
    member: ID
    memberRelationship: FilmMemberRelationship
    includeFriends: IncludeFriends
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    where: [FilmsWhere!]
    sort: FilmsSort
    ): FilmCollection
  
  # Private endpoint restricted to Letterboxd and approved partners only.
  # Access token optional, will be personalized to user's preferred stores if provided
  filmAvailability(accessToken: String, film: ID!): [FilmAvailability!]
  
  filmMembers(
    film: ID!
    member: ID
    memberRelationship: MemberRelationship
    filmRelationship: FilmMemberRelationship
    sort: MembersSort
    perPage: Int
    cursor: ID
    ): [MemberFilmRelationship!]
  
  lists(
    film: ID
    clonedFrom: ID
    member: ID
    memberRelationship: ListMemberRelationship
    includeFriends: IncludeFriends
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    where: [ListsWhere!]
    filter: [ListsFilter!]
    sort: ListsSort
    perPage: Int
    cursor: ID
    ): [List!]!
  
  list(id: ID!): List

  listStatistics(list: ID!): ListStatistics

  listComments(list: ID!): [ListComment!]
  
  relationshipToList(accessToken: String!, list: ID!): ListRelationship
  
  logEntries(
    film: ID
    member: ID
    memberRelationship: LogEntryMemberRelationship
    filmMemberRelationship: FilmMemberRelationship
    includeFriends: IncludeFriends
    year: Int
    month: Int
    week: Int
    day: Int
    minRating: Float
    maxRating: Float
    filmDecade: Int
    filmYear: Int
    genre: ID
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    service: ID
    where: [LogEntriesWhere!]
    sort: LogEntriesSort
    perPage: Int
    cursor: ID
    ): [LogEntry!]!
  
  logEntry(id: ID!): LogEntry

  reviewStatistics(logEntry: ID!): ReviewStatistics

  reviewComments(logEntry: ID!): [ReviewComment!]
  
  relationshipToReview(accessToken: String!, logEntry: ID!): ReviewRelationship

  # Auth

  generateToken(username: String!, password: String!):  AccessToken

  usernameCheck(username: String!): UsernameCheckResult

  # Members

  me(accessToken: String!): MemberAccount
  
  members(
    member: ID
    memberRelationship: MemberRelationship
    film: ID
    filmRelationship: FilmMemberRelationship
    list: ID
    review: ID
    sort: MembersSort
    perPage: Int
    cursor: ID
    ): [Member!]!
  
  member(id: ID!): Member

  memberStatistics(member: ID!): MemberStatistics

  memberLogEntryTags(member: ID!): [MemberTag!]

  memberListTags(member: ID!): [MemberTag!]

  watchlist(member: ID!
    genre: ID
    decade: Int
    year: Int
    service: ID
    memberRelationship: FilmMemberRelationship
    includeFriends: IncludeFriends
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    where: [FilmsWhere!]
    sort: WatchlistSort
    perPage: Int
    cursor: ID): [Film!]
  
  contributor(id: ID!): Contributor
  
  contributions(
    contributor: ID!
    type: ContributionType
    genre: ID
    decade: Int
    year: Int
    service: ID
    member: ID
    memberRelationship: FilmMemberRelationship
    includeFriends: IncludeFriends
    tagCode: String
    tagger: String
    includeTaggerFriends: IncludeFriends
    where: [FilmsWhere!]
    sort: FilmContributionsSort
    perPage: Int
    cursor: ID
    ): [FilmContribution!]
  
  genres: [Genre!]!
  
  services: [Service!]!
  
  search(
    input: String!
    include: [SearchInclude!]
    perPage: Int
    cursor: ID
    ): [SearchItem!]!
}
